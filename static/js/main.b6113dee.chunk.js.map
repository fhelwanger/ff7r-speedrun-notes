{"version":3,"sources":["components/Drawer.tsx","components/Header.tsx","components/Route.tsx","useSettings.ts","components/Card.tsx","components/palette.ts","components/Boss.tsx","components/BattleSettings.tsx","components/Encounter.tsx","components/Menu.tsx","components/Pick.tsx","routes/any-nmg-normal/Chapter1.tsx","routes/any-nmg-normal/Chapter2.tsx","components/Dialogue.tsx","components/Equipment.tsx","components/Materia.tsx","components/Shop.tsx","routes/any-nmg-normal/Chapter3.tsx","routes/any-nmg-normal/index.tsx","useTheme.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","closeButton","marginLeft","Drawer","open","onClose","settings","setSettings","classes","Box","width","Toolbar","IconButton","className","edge","onClick","Divider","List","ListItem","ListItemText","primary","ListItemSecondaryAction","Switch","checked","showEncounters","onChange","showBosses","showPick","showOptionalPick","showMenus","showShops","showDialogue","title","paddingLeft","spacing","flexGrow","Header","setTheme","onMenuClick","AppBar","position","color","Typography","variant","noWrap","Tooltip","paddingTop","paddingBottom","Route","children","align","paragraph","maxWidth","margin","defaultSettings","SettingsContext","React","createContext","useSettings","useState","useEffect","settingsStorageValue","localStorage","getItem","JSON","parse","setItem","stringify","card","marginBottom","colorBox","height","Card","bgcolor","charactersPalette","cloud","tifa","barret","aerith","cardsPalette","nestedList","listItemText","lineHeight","Boss","name","phases","useContext","dense","subheader","ListSubheader","map","phase","phaseIndex","Fragment","key","disablePadding","instructions","instruction","instructionIndex","shortcutIcon","minWidth","BattleSettings","characters","icons","circle","CircleIcon","square","SquareIcon","triangle","TriangleIcon","x","XIcon","character","characterIndex","shortcuts","shortcut","shortcutIndex","ListItemIcon","createElement","ability","Encounter","enemies","index","Menu","mappedChildren","Children","child","childIndex","Pick","item","description","optional","text","secondary","Chapter1","Chapter2","Dialogue","optionText","optionPosition","when","Equipment","equipments","equipment","equipmentIndex","listItemIcon","Materia","renderMateria","materia","i","component","style","fontWeight","status","undefined","weapon","armor","summon","Shop","sell","buy","length","AnyPercentNoMajorGlitchesNormal","Chapter3","useTheme","themeStorageValue","muiTheme","useMemo","createMuiTheme","palette","type","box","padding","App","menuOpen","setMenuOpen","ThemeProvider","Provider","value","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6113dee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport MuiDrawer from \"@material-ui/core/Drawer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Settings } from \"../useSettings\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  closeButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n}));\r\n\r\nexport interface DrawerProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  settings: Settings;\r\n  setSettings: (settings: Settings) => void;\r\n}\r\n\r\nfunction Drawer({ open, onClose, settings, setSettings }: DrawerProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiDrawer open={open} onClose={onClose}>\r\n      <Box width={300}>\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.closeButton}\r\n            edge=\"end\"\r\n            onClick={onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show encounters\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showEncounters}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showEncounters: !settings.showEncounters,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show bosses\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showBosses}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showBosses: !settings.showBosses,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show items to pick\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showPick}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showPick: !settings.showPick,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show optional items to pick\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showOptionalPick}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showOptionalPick: !settings.showOptionalPick,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show menus\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showMenus}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showMenus: !settings.showMenus,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show shops\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showShops}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showShops: !settings.showShops,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show dialogue options\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showDialogue}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showDialogue: !settings.showDialogue,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </Box>\r\n    </MuiDrawer>\r\n  );\r\n}\r\n\r\nexport default Drawer;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DarkThemeIcon from \"@material-ui/icons/Brightness5\";\r\nimport LightThemeIcon from \"@material-ui/icons/Brightness7\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"../useTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    paddingLeft: theme.spacing(2),\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport interface HeaderProps {\r\n  setTheme: (theme: Theme) => void;\r\n  theme: Theme;\r\n  onMenuClick: () => void;\r\n}\r\n\r\nfunction Header({ theme, setTheme, onMenuClick }: HeaderProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar>\r\n        <IconButton color=\"inherit\" edge=\"start\" onClick={onMenuClick}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          Final Fantasy VII Remake Speedrun Notes\r\n        </Typography>\r\n        <Tooltip title=\"Toggle light/dark theme\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            edge=\"end\"\r\n            onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\r\n          >\r\n            {theme === \"light\" ? <DarkThemeIcon /> : <LightThemeIcon />}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport interface RouteProps {\r\n  title: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Route({ title, children }: RouteProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography\r\n        variant=\"h3\"\r\n        align=\"center\"\r\n        paragraph\r\n        className={classes.title}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Box maxWidth={800} margin=\"0 auto\">\r\n        {children}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Route;\r\n","import React from \"react\";\r\n\r\nexport interface Settings {\r\n  showEncounters: boolean;\r\n  showBosses: boolean;\r\n  showPick: boolean;\r\n  showOptionalPick: boolean;\r\n  showMenus: boolean;\r\n  showShops: boolean;\r\n  showDialogue: boolean;\r\n}\r\n\r\nconst defaultSettings: Settings = {\r\n  showEncounters: true,\r\n  showBosses: true,\r\n  showPick: true,\r\n  showOptionalPick: true,\r\n  showMenus: true,\r\n  showShops: true,\r\n  showDialogue: true,\r\n};\r\n\r\nexport const SettingsContext = React.createContext(defaultSettings);\r\n\r\nfunction useSettings() {\r\n  const settingsStorageKey = \"SETTINGS\";\r\n  const [settings, setSettings] = React.useState<Settings>(defaultSettings);\r\n\r\n  React.useEffect(() => {\r\n    const settingsStorageValue = localStorage.getItem(settingsStorageKey);\r\n\r\n    if (settingsStorageValue) {\r\n      setSettings(JSON.parse(settingsStorageValue));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    settings,\r\n    setSettings: (settings: Settings) => {\r\n      localStorage.setItem(settingsStorageKey, JSON.stringify(settings));\r\n      setSettings(settings);\r\n    },\r\n  };\r\n}\r\n\r\nexport default useSettings;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MuiCard from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  colorBox: {\r\n    height: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface CardProps {\r\n  color: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Card({ color, children }: CardProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiCard className={classes.card}>\r\n      <Box className={classes.colorBox} bgcolor={color} />\r\n      {children}\r\n    </MuiCard>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export const charactersPalette = {\r\n  cloud: \"#BF9000\",\r\n  tifa: \"#38761D\",\r\n  barret: \"#990000\",\r\n  aerith: \"#1155CC\",\r\n};\r\n\r\nexport const cardsPalette = {\r\n  boss: \"#F44336\",\r\n  encounter: \"#FB99BB\",\r\n  menu: \"#3F51B5\",\r\n  pick: \"#2D6930\",\r\n  pickOptional: \"#6FBF73\",\r\n  shop: \"#FF9800\",\r\n  dialogue: \"#795548\",\r\n};\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface BossProps {\r\n  name: string;\r\n  phases: Array<{\r\n    name: string;\r\n    instructions: Array<string>;\r\n  }>;\r\n}\r\n\r\nfunction Boss({ name, phases }: BossProps) {\r\n  const classes = useStyles();\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showBosses) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card color={cardsPalette.boss}>\r\n      <List dense subheader={<ListSubheader>{name}</ListSubheader>}>\r\n        {phases.map((phase, phaseIndex) => (\r\n          <React.Fragment key={phaseIndex}>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={phase.name}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <List dense disablePadding className={classes.nestedList}>\r\n              {phase.instructions.map((instruction, instructionIndex) => (\r\n                <ListItem key={instructionIndex}>\r\n                  <ListItemText\r\n                    primary={instruction}\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Boss;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircleIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport SquareIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport TriangleIcon from \"@material-ui/icons/ChangeHistory\";\r\nimport XIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n  shortcutIcon: {\r\n    minWidth: \"30px\",\r\n  },\r\n}));\r\n\r\nexport interface BattleSettingsProps {\r\n  characters: Array<{\r\n    name: string;\r\n    shortcuts: Array<{\r\n      shortcut: \"circle\" | \"square\" | \"triangle\" | \"x\";\r\n      ability: string;\r\n    }>;\r\n  }>;\r\n}\r\n\r\nfunction BattleSettings({ characters }: BattleSettingsProps) {\r\n  const classes = useStyles();\r\n\r\n  const icons = {\r\n    circle: CircleIcon,\r\n    square: SquareIcon,\r\n    triangle: TriangleIcon,\r\n    x: XIcon,\r\n  };\r\n\r\n  return (\r\n    <List dense subheader={<ListSubheader>Battle Settings</ListSubheader>}>\r\n      {characters.map((character, characterIndex) => (\r\n        <React.Fragment key={characterIndex}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={character.name}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n          <List dense disablePadding className={classes.nestedList}>\r\n            {character.shortcuts.map((shortcut, shortcutIndex) => (\r\n              <ListItem key={shortcutIndex}>\r\n                <ListItemIcon className={classes.shortcutIcon}>\r\n                  {React.createElement(icons[shortcut.shortcut])}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={shortcut.ability}\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </React.Fragment>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default BattleSettings;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface EncounterProps {\r\n  enemies: string;\r\n  instructions: Array<string>;\r\n}\r\n\r\nfunction Encounter({ enemies, instructions }: EncounterProps) {\r\n  const classes = useStyles();\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showEncounters) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card color={cardsPalette.encounter}>\r\n      <List dense subheader={<ListSubheader>{enemies}</ListSubheader>}>\r\n        {instructions.map((instruction, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemText\r\n              primary={instruction}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Encounter;\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nexport interface MenuProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Menu({ children }: MenuProps) {\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showMenus) {\r\n    return null;\r\n  }\r\n\r\n  const mappedChildren = React.Children.map(children, (child, childIndex) => {\r\n    if (childIndex === 0) {\r\n      return child;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Divider />\r\n        {child}\r\n      </>\r\n    );\r\n  });\r\n\r\n  return <Card color={cardsPalette.menu}>{mappedChildren}</Card>;\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nexport interface PickProps {\r\n  item: string;\r\n  description?: string;\r\n  optional?: boolean;\r\n}\r\n\r\nfunction Pick({ item, description, optional }: PickProps) {\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showPick && !optional) {\r\n    return null;\r\n  }\r\n\r\n  if (!settings.showOptionalPick && optional) {\r\n    return null;\r\n  }\r\n\r\n  let text = `Pick ${item}`;\r\n\r\n  if (optional) {\r\n    text += \" (optional)\";\r\n  }\r\n\r\n  return (\r\n    <Card color={optional ? cardsPalette.pickOptional : cardsPalette.pick}>\r\n      <List dense>\r\n        <ListItem>\r\n          <ListItemText primary={text} secondary={description} />\r\n        </ListItem>\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Pick;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Boss from \"../../components/Boss\";\r\nimport BattleSettings from \"../../components/BattleSettings\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Menu from \"../../components/Menu\";\r\nimport Pick from \"../../components/Pick\";\r\n\r\nfunction Chapter1() {\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" paragraph>\r\n        Chapter 1\r\n      </Typography>\r\n      <Encounter enemies=\"Security Officer x2\" instructions={[\"Cleave\"]} />\r\n      <Encounter enemies=\"Security Officer x2\" instructions={[\"Punisher\"]} />\r\n      <Menu>\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              shortcuts: [\r\n                {\r\n                  shortcut: \"circle\",\r\n                  ability: \"Fire\",\r\n                },\r\n                {\r\n                  shortcut: \"x\",\r\n                  ability: \"Cross Slash\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Security Officer, Guard Dog\"\r\n        instructions={[\r\n          \"Security Officer: Dash, Punisher\",\r\n          \"Guard Dog: Fire, Punisher\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Guard Dog\"\r\n        instructions={[\r\n          \"Security Officers: Punisher\",\r\n          \"Guard Dog: Fire, Punisher\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2\"\r\n        instructions={[\"Dash, Punisher\"]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x4\"\r\n        instructions={[\"Dash, Punisher rightmost one\"]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Sentry Ray x3, Monodrive x3\"\r\n        instructions={[\r\n          \"Overcharge Sentry Ray B, Combo A, Thunder x2\",\r\n          \"Punisher Monodrive B and C, Focused Thrust A\",\r\n        ]}\r\n      />\r\n      <Menu>\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Barret\",\r\n              shortcuts: [\r\n                {\r\n                  shortcut: \"square\",\r\n                  ability: \"Thunder\",\r\n                },\r\n                {\r\n                  shortcut: \"circle\",\r\n                  ability: \"Fire\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Sweeper\"\r\n        instructions={[\r\n          \"Cloud: Dash, Punisher\",\r\n          \"Barret: Overcharge, Combo, Charge, Thunder\",\r\n          \"Barret: Charge, Combo, Charge, Focused Shot, Focused Thrust\",\r\n          \"Cloud: Punisher (fill 2 ATB), Barret Thunder x2\",\r\n        ]}\r\n      />\r\n      <Pick item=\"Ether\" description=\"If near stairs after battle\" optional />\r\n      <Boss\r\n        name=\"Guard Scorpion\"\r\n        phases={[\r\n          {\r\n            name: \"Phase 1\",\r\n            instructions: [\r\n              \"Cloud: Dash\",\r\n              \"Barret: Lock, run back, Overcharge\",\r\n              \"Cloud: Counter, Punisher full, Berserk, Fire, Focused Shot\",\r\n              \"Cloud: Punisher full, Fire, Punisher x4, Berserk, Fire, Punisher\",\r\n            ],\r\n          },\r\n          {\r\n            name: \"Phase 2\",\r\n            instructions: [\r\n              \"Cloud: Dash and Roll x2, go behind\",\r\n              \"Cloud: Punisher x4, Berserk, Fire, Punisher x4, Focused Thrust\",\r\n              \"Barret: Combo, Focused Shot, Combo\",\r\n              \"Cloud: Counter, Punisher x4, Berserk, Focused Thrust, Thunder\",\r\n              \"Cloud: Punisher x2, Berserk, Overcharge, Punisher full, Thunder, Berserk\",\r\n            ],\r\n          },\r\n          {\r\n            name: \"Phase 3\",\r\n            instructions: [\r\n              \"Cloud: Fire\",\r\n              \"Barret: Combo, Thunder, Combo, Charge, Combo, Charge, Focused Shot\",\r\n              \"Cloud: Dash, Punisher x3, Berserk, Cross Slash\",\r\n              \"Barret: Overcharge, Combo, Swap to Cloud\",\r\n            ],\r\n          },\r\n          {\r\n            name: \"Phase 4\",\r\n            instructions: [\r\n              \"Cloud: Punisher x2, Berserk, Fire on Left Leg\",\r\n              \"Fire, Thunder\",\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Monodrive x2\"\r\n        instructions={[\r\n          \"Punisher B, Roll and Operator until ATB, Focused Thrust A\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Monodrive x2\"\r\n        instructions={[\r\n          \"Cloud: Operator x1 left Monodrive, Punisher full Monodrive + Security Officer\",\r\n          \"Cloud: Focused Thrust Security Officer\",\r\n          \"Barret: Overcharge Monodrive, Swap to Cloud\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Shock Trooper x3, Sentry Ray x2\"\r\n        instructions={[\r\n          \"Barret: Overcharge Sentry Ray A, Thunder B\",\r\n          \"Cloud: Counter and Fire/Braver/Punisher Shock Troopers\",\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chapter1;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Pick from \"../../components/Pick\";\r\n\r\nfunction Chapter2() {\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" paragraph>\r\n        Chapter 2\r\n      </Typography>\r\n      <Pick item=\"Ether\" description=\"When you go outside\" />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Guard Dog\"\r\n        instructions={[\r\n          \"Dash, Berserk, Punisher Security Officers\",\r\n          \"Fire, Punisher Guard Dog\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Grenadier x2\"\r\n        instructions={[\r\n          \"Cleave Grenadiers\",\r\n          \"Fire Security Officer\",\r\n          \"Focused Thrust Security Officer\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Shock Troopers x2\"\r\n        instructions={[\"Counter until Staggered\", \"Berserk, Fire\"]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Grenadier x2\"\r\n        instructions={[\r\n          \"Punisher Security Officer\",\r\n          \"Focused Thrust Security Officer\",\r\n          \"Cleave Grenadiers\",\r\n        ]}\r\n      />\r\n      <Pick item=\"Grenade x2\" />\r\n      <Pick item=\"Iron Bangle\" />\r\n      <Encounter\r\n        enemies=\"Security Officer x6, Grenadier x2, Riot Trooper x2, The Huntsman\"\r\n        instructions={[\r\n          \"Grenade Riot Troopers, Berserk before Huntsman\",\r\n          \"Huntsman: Fire to pressure, Punisher, Berserk, Fire\",\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chapter2;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nexport interface DialogueProps {\r\n  optionText: string;\r\n  optionPosition: \"1st\" | \"2nd\" | \"3rd\";\r\n  when: string;\r\n}\r\n\r\nfunction Dialogue({ optionText, optionPosition, when }: DialogueProps) {\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showDialogue) {\r\n    return null;\r\n  }\r\n\r\n  let text = `Choose \"${optionText}\" (${optionPosition}) ${when}`;\r\n\r\n  return (\r\n    <Card color={cardsPalette.dialogue}>\r\n      <List dense>\r\n        <ListItem>\r\n          <ListItemText primary={text} />\r\n        </ListItem>\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Dialogue;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface EquipmentProps {\r\n  characters: Array<{\r\n    name: string;\r\n    equipments: Array<{ name: string }>;\r\n  }>;\r\n}\r\n\r\nfunction Equipment({ characters }: EquipmentProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List dense subheader={<ListSubheader>Equipment</ListSubheader>}>\r\n      {characters.map((character, characterIndex) => (\r\n        <React.Fragment key={characterIndex}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={character.name}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n          <List dense disablePadding className={classes.nestedList}>\r\n            {character.equipments.map((equipment, equipmentIndex) => (\r\n              <ListItem key={equipmentIndex}>\r\n                <ListItemText\r\n                  primary={equipment.name}\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </React.Fragment>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Equipment;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { charactersPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  listItemIcon: {\r\n    minWidth: 64,\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface MateriaItem {\r\n  name: string;\r\n  status: \"unchanged\" | \"new\" | \"cloud\" | \"tifa\" | \"barret\" | \"aerith\";\r\n}\r\n\r\nexport interface MateriaProps {\r\n  characters: Array<{\r\n    name: string;\r\n    weapon: Array<MateriaItem>;\r\n    armor: Array<MateriaItem>;\r\n    summon: Array<MateriaItem>;\r\n  }>;\r\n}\r\n\r\nfunction Materia({ characters }: MateriaProps) {\r\n  const classes = useStyles();\r\n\r\n  const renderMateria = (materia: Array<MateriaItem>) => {\r\n    return materia.map((x, i) => (\r\n      <Typography\r\n        key={i}\r\n        component=\"span\"\r\n        variant=\"body2\"\r\n        className={classes.listItemText}\r\n        style={{\r\n          fontWeight: x.status !== \"unchanged\" ? \"bold\" : undefined,\r\n          color:\r\n            x.status !== \"unchanged\" && x.status !== \"new\"\r\n              ? charactersPalette[x.status]\r\n              : undefined,\r\n        }}\r\n      >{`(${x.name || \"Empty\"}) `}</Typography>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <List dense subheader={<ListSubheader>Materia</ListSubheader>}>\r\n      {characters.map((character, characterIndex) => (\r\n        <React.Fragment key={characterIndex}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={character.name}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n          <List dense disablePadding className={classes.nestedList}>\r\n            <ListItem>\r\n              <ListItemIcon className={classes.listItemIcon}>\r\n                Weapon\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={renderMateria(character.weapon)}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon className={classes.listItemIcon}>\r\n                Armor\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={renderMateria(character.armor)}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon className={classes.listItemIcon}>\r\n                Summon\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={renderMateria(character.summon)}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </React.Fragment>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Materia;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface ShopProps {\r\n  name: string;\r\n  sell?: Array<string>;\r\n  buy?: Array<string>;\r\n}\r\n\r\nfunction Shop({ name, sell, buy }: ShopProps) {\r\n  const classes = useStyles();\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showShops) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card color={cardsPalette.shop}>\r\n      <List dense subheader={<ListSubheader>{name}</ListSubheader>}>\r\n        {sell && sell.length > 0 && (\r\n          <>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Sell\"\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <List dense disablePadding className={classes.nestedList}>\r\n              {sell.map((item, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={item}\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </>\r\n        )}\r\n        {buy && buy.length > 0 && (\r\n          <>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Buy\"\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <List dense disablePadding className={classes.nestedList}>\r\n              {buy.map((item, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={item}\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </>\r\n        )}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport BattleSettings from \"../../components/BattleSettings\";\r\nimport Dialogue from \"../../components/Dialogue\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Equipment from \"../../components/Equipment\";\r\nimport Materia from \"../../components/Materia\";\r\nimport Menu from \"../../components/Menu\";\r\nimport Pick from \"../../components/Pick\";\r\nimport Shop from \"../../components/Shop\";\r\n\r\nfunction Chapter2() {\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" paragraph>\r\n        Chapter 3\r\n      </Typography>\r\n      <Shop name=\"Item Shop\" buy={[\"Deadly Dodge\"]} />\r\n      <Menu>\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n                { name: \"Deadly Dodge\", status: \"new\" },\r\n              ],\r\n              armor: [],\r\n              summon: [],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Pick item=\"Ether\" description=\"After Biggs/Wedge\" optional />\r\n      <Pick item=\"Ice\" description=\"In Scrap Boulevard\" />\r\n      <Encounter\r\n        enemies=\"Gorgers and Wererats\"\r\n        instructions={[\r\n          \"Deadly Dodge + Cleave, then Punisher, Fire, Focused Thrust...\",\r\n        ]}\r\n      />\r\n      <Shop name=\"Weapon Shop\" buy={[\"Earrings\"]} />\r\n      <Menu>\r\n        <Equipment\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              equipments: [\r\n                { name: \"Iron Blade\" },\r\n                { name: \"Iron Bangle\" },\r\n                { name: \"Earrings\" },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n                { name: \"Ice\", status: \"new\" },\r\n                { name: \"Assess\", status: \"new\" },\r\n              ],\r\n              armor: [{ name: \"Deadly Dodge\", status: \"cloud\" }],\r\n              summon: [],\r\n            },\r\n          ]}\r\n        />\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              shortcuts: [\r\n                { shortcut: \"square\", ability: \"Assess\" },\r\n                { shortcut: \"x\", ability: \"TRIPOLOSKI\" },\r\n              ],\r\n            },\r\n            {\r\n              name: \"Tifa\",\r\n              shortcuts: [\r\n                { shortcut: \"x\", ability: \"Blizzard\" },\r\n                { shortcut: \"circle\", ability: \"Fire\" },\r\n                { shortcut: \"square\", ability: \"Thunder\" },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Wererats x2, Gorger\"\r\n        instructions={[\r\n          \"Build ATB and Assess Gorger + Wererat\",\r\n          \"Deadly Dodge\",\r\n          \"Flee if Call to Arms\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Elite Security Officer, Guard Dog\"\r\n        instructions={[\"Cloud: Deadly Dodge, Fire Dog, Berserk, TRIPOLOSKI\"]}\r\n      />\r\n      <Dialogue\r\n        optionText=\"No\"\r\n        optionPosition=\"2nd\"\r\n        when=\"before entering 7th Heaven\"\r\n      />\r\n      <Encounter\r\n        enemies=\"Hoodlum x4\"\r\n        instructions={[\r\n          \"Deadly Dodge, Fire\",\r\n          \"TRIPOLOSKI if low HP, Fire otherwise\",\r\n        ]}\r\n      />\r\n      <Dialogue\r\n        optionText=\"Yeah\"\r\n        optionPosition=\"2nd\"\r\n        when=\"when talking to Jessie\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chapter2;\r\n","import React from \"react\";\r\nimport Route from \"../../components/Route\";\r\nimport Chapter1 from \"./Chapter1\";\r\nimport Chapter2 from \"./Chapter2\";\r\nimport Chapter3 from \"./Chapter3\";\r\n\r\nfunction AnyPercentNoMajorGlitchesNormal() {\r\n  return (\r\n    <Route title=\"Any% No Major Glitches - Normal\">\r\n      <Chapter1 />\r\n      <Chapter2 />\r\n      <Chapter3 />\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default AnyPercentNoMajorGlitchesNormal;\r\n","import React from \"react\";\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport type Theme = \"light\" | \"dark\";\r\n\r\nfunction useTheme() {\r\n  const themeStorageKey = \"THEME\";\r\n  const [theme, setTheme] = React.useState<Theme>(\"dark\");\r\n\r\n  React.useEffect(() => {\r\n    const themeStorageValue = localStorage.getItem(themeStorageKey);\r\n\r\n    if (\r\n      themeStorageValue &&\r\n      (themeStorageValue === \"light\" || themeStorageValue === \"dark\")\r\n    ) {\r\n      setTheme(themeStorageValue);\r\n    }\r\n  }, []);\r\n\r\n  const muiTheme = React.useMemo(() => {\r\n    return createMuiTheme({\r\n      palette: {\r\n        type: theme,\r\n      },\r\n    });\r\n  }, [theme]);\r\n\r\n  return {\r\n    theme,\r\n    setTheme: (theme: Theme) => {\r\n      localStorage.setItem(themeStorageKey, theme);\r\n      setTheme(theme);\r\n    },\r\n    muiTheme,\r\n  };\r\n}\r\n\r\nexport default useTheme;\r\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Drawer from \"./components/Drawer\";\nimport Header from \"./components/Header\";\nimport AnyPercentNoMajorGlitchesNormal from \"./routes/any-nmg-normal\";\nimport useSettings, { SettingsContext } from \"./useSettings\";\nimport useTheme from \"./useTheme\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const { theme, setTheme, muiTheme } = useTheme();\n  const { settings, setSettings } = useSettings();\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <SettingsContext.Provider value={settings}>\n        <CssBaseline />\n        <Drawer\n          open={menuOpen}\n          onClose={() => setMenuOpen(false)}\n          settings={settings}\n          setSettings={setSettings}\n        />\n        <Header\n          theme={theme}\n          setTheme={setTheme}\n          onMenuClick={() => setMenuOpen(true)}\n        />\n        <Box className={classes.box}>\n          <AnyPercentNoMajorGlitchesNormal />\n        </Box>\n      </SettingsContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}