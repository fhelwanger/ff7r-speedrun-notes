{"version":3,"sources":["useIndex.ts","components/Drawer.tsx","components/Header.tsx","components/Card.tsx","components/IndexTitle.tsx","components/palette.ts","components/Introduction.tsx","components/Route.tsx","useSettings.ts","components/Boss.tsx","components/BattleSettings.tsx","components/Chapter.tsx","components/Encounter.tsx","components/Menu.tsx","components/Pick.tsx","routes/any-nmg-normal/Chapter1.tsx","routes/any-nmg-normal/Chapter2.tsx","components/Dialogue.tsx","components/Equipment.tsx","components/Materia.tsx","components/Shop.tsx","routes/any-nmg-normal/Chapter3.tsx","components/UpgradeWeapons.tsx","routes/any-nmg-normal/Chapter4.tsx","components/Bench.tsx","routes/any-nmg-normal/Chapter5.tsx","routes/any-nmg-normal/index.tsx","useTheme.ts","App.tsx","index.tsx"],"names":["IndexContext","React","createContext","index","addEntry","removeEntry","useIndex","useState","setIndex","useCallback","entry","id","filter","x","useStyles","makeStyles","theme","closeButton","marginLeft","Drawer","open","onClose","settings","setSettings","classes","useContext","Box","width","Toolbar","variant","Tooltip","title","IconButton","className","edge","onClick","Divider","List","dense","subheader","ListSubheader","disableSticky","map","ListItem","key","button","document","getElementById","scrollIntoView","ListItemText","primary","text","ListItemSecondaryAction","Switch","checked","showEncounters","onChange","showBosses","showPick","showOptionalPick","showMenus","showShops","showDialogue","showBench","showOptionalBench","paddingLeft","spacing","flexGrow","Header","setTheme","onMenuClick","AppBar","position","color","Typography","noWrap","card","marginBottom","colorBox","height","Card","children","bgcolor","scrollMarginTop","mixins","toolbar","minHeight","IndexTitle","useEffect","paragraph","charactersPalette","cloud","tifa","barret","aerith","cardsPalette","settingsList","display","flexWrap","settingsListItem","Menus","materiaColors","colorName","undefined","description","materiaColor","materiaColorIndex","ListItemIcon","style","fontWeight","RecommendedSettings","name","value","setting","settingIndex","secondary","FirstStrike","enemy","enemyIndex","Introduction","useTheme","palette","padding","paddingBottom","paddingTop","Route","align","defaultSettings","SettingsContext","useSettings","settingsStorageValue","localStorage","getItem","JSON","parse","setItem","stringify","nestedList","listItemText","lineHeight","Boss","phases","phase","phaseIndex","Fragment","disablePadding","instruction","instructionIndex","list","listSubheader","shortcutIcon","minWidth","BattleSettings","characters","icons","circle","CircleIcon","square","SquareIcon","triangle","TriangleIcon","XIcon","character","characterIndex","shortcuts","shortcut","shortcutIndex","createElement","ability","Chapter","number","Encounter","enemies","instructions","Menu","mappedChildren","Children","child","childIndex","Pick","item","optional","Chapter1","Chapter2","Dialogue","optionText","optionPosition","when","Equipment","equipments","equipment","equipmentIndex","listItemIcon","Materia","renderMateria","materia","i","component","status","textTransform","weapon","armor","summon","Shop","sell","buy","length","Chapter3","UpgradeWeapons","weapons","weaponIndex","upgrade","Chapter4","Bench","Chapter5","AnyPercentNoMajorGlitchesNormal","themeStorageValue","muiTheme","useMemo","createMuiTheme","type","box","App","menuOpen","setMenuOpen","indexContext","ThemeProvider","Provider","CssBaseline","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.41974c63.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport type IndexEntry = { id: string; text: string };\r\nexport type Index = Array<IndexEntry>;\r\n\r\nexport type IndexContextType = {\r\n  index: Index;\r\n  addEntry: (entry: IndexEntry) => void;\r\n  removeEntry: (id: string) => void;\r\n};\r\n\r\nexport const IndexContext = React.createContext<IndexContextType>({\r\n  index: [],\r\n  addEntry: () => {},\r\n  removeEntry: () => {},\r\n});\r\n\r\nfunction useIndex(): IndexContextType {\r\n  const [index, setIndex] = React.useState<Index>([]);\r\n\r\n  const addEntry = React.useCallback((entry: IndexEntry) => {\r\n    setIndex((index) => [...index, entry]);\r\n  }, []);\r\n\r\n  const removeEntry = React.useCallback((id: string) => {\r\n    setIndex((index) => index.filter((x) => x.id !== id));\r\n  }, []);\r\n\r\n  return {\r\n    index,\r\n    addEntry,\r\n    removeEntry,\r\n  };\r\n}\r\n\r\nexport default useIndex;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport MuiDrawer from \"@material-ui/core/Drawer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { IndexContext } from \"../useIndex\";\r\nimport { Settings } from \"../useSettings\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  closeButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n}));\r\n\r\nexport interface DrawerProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  settings: Settings;\r\n  setSettings: (settings: Settings) => void;\r\n}\r\n\r\nfunction Drawer({ open, onClose, settings, setSettings }: DrawerProps) {\r\n  const classes = useStyles();\r\n  const { index } = React.useContext(IndexContext);\r\n\r\n  return (\r\n    <MuiDrawer open={open} onClose={onClose}>\r\n      <Box width={300}>\r\n        <Toolbar variant=\"dense\">\r\n          <Tooltip title=\"Close\">\r\n            <IconButton\r\n              className={classes.closeButton}\r\n              edge=\"end\"\r\n              onClick={onClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List\r\n          dense\r\n          subheader={<ListSubheader disableSticky>Index</ListSubheader>}\r\n        >\r\n          {index.map((x) => (\r\n            <ListItem\r\n              key={x.id}\r\n              button\r\n              onClick={() => {\r\n                document.getElementById(x.id)?.scrollIntoView();\r\n                onClose();\r\n              }}\r\n            >\r\n              <ListItemText primary={x.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List\r\n          dense\r\n          subheader={<ListSubheader disableSticky>Settings</ListSubheader>}\r\n        >\r\n          <ListItem>\r\n            <ListItemText primary=\"Show encounters\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showEncounters}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showEncounters: !settings.showEncounters,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show bosses\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showBosses}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showBosses: !settings.showBosses,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show items to pick\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showPick}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showPick: !settings.showPick,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show optional items to pick\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showOptionalPick}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showOptionalPick: !settings.showOptionalPick,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show menus\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showMenus}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showMenus: !settings.showMenus,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show shops\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showShops}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showShops: !settings.showShops,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show dialogue options\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showDialogue}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showDialogue: !settings.showDialogue,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show benches\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showBench}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showBench: !settings.showBench,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Show optional benches\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={settings.showOptionalBench}\r\n                onChange={() =>\r\n                  setSettings({\r\n                    ...settings,\r\n                    showOptionalBench: !settings.showOptionalBench,\r\n                  })\r\n                }\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </Box>\r\n    </MuiDrawer>\r\n  );\r\n}\r\n\r\nexport default Drawer;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DarkThemeIcon from \"@material-ui/icons/Brightness5\";\r\nimport LightThemeIcon from \"@material-ui/icons/Brightness7\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"../useTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    paddingLeft: theme.spacing(2),\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport interface HeaderProps {\r\n  setTheme: (theme: Theme) => void;\r\n  theme: Theme;\r\n  onMenuClick: () => void;\r\n}\r\n\r\nfunction Header({ theme, setTheme, onMenuClick }: HeaderProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar variant=\"dense\">\r\n        <IconButton color=\"inherit\" edge=\"start\" onClick={onMenuClick}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          Final Fantasy VII Remake Speedrun Notes\r\n        </Typography>\r\n        <Tooltip title=\"Toggle light/dark theme\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            edge=\"end\"\r\n            onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\r\n          >\r\n            {theme === \"light\" ? <DarkThemeIcon /> : <LightThemeIcon />}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MuiCard from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  colorBox: {\r\n    height: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface CardProps {\r\n  color: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Card({ color, children }: CardProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MuiCard className={classes.card}>\r\n      <Box className={classes.colorBox} bgcolor={color} />\r\n      {children}\r\n    </MuiCard>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IndexContext } from \"../useIndex\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    scrollMarginTop: theme.mixins.toolbar.minHeight + \"px\",\r\n  },\r\n}));\r\n\r\nexport interface IndexTitleProps {\r\n  id: string;\r\n  text: string;\r\n}\r\n\r\nfunction IndexTitle({ id, text }: IndexTitleProps) {\r\n  const classes = useStyles();\r\n  const { addEntry, removeEntry } = React.useContext(IndexContext);\r\n\r\n  React.useEffect(() => {\r\n    addEntry({ id, text });\r\n    return () => removeEntry(id);\r\n  }, [id, text, addEntry, removeEntry]);\r\n\r\n  return (\r\n    <Typography id={id} className={classes.title} variant=\"h4\" paragraph>\r\n      {text}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default IndexTitle;\r\n","export const charactersPalette = {\r\n  cloud: \"#F9A825\",\r\n  tifa: \"#4CAF50\",\r\n  barret: \"#F44336\",\r\n  aerith: \"#2196F3\",\r\n};\r\n\r\nexport const cardsPalette = {\r\n  boss: \"#F44336\",\r\n  encounter: \"#FB99BB\",\r\n  menu: \"#3F51B5\",\r\n  pick: \"#2D6930\",\r\n  pickOptional: \"#6FBF73\",\r\n  shop: \"#FF9800\",\r\n  dialogue: \"#795548\",\r\n  bench: \"#757575\",\r\n  benchOptional: \"#9E9E9E\",\r\n};\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"./Card\";\r\nimport IndexTitle from \"./IndexTitle\";\r\nimport { charactersPalette } from \"./palette\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  settingsList: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  settingsListItem: {\r\n    flexGrow: 1,\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nfunction Menus() {\r\n  const materiaColors = [\r\n    {\r\n      colorName: \"Default\",\r\n      color: undefined,\r\n      description: \"From the inventory\",\r\n    },\r\n    {\r\n      colorName: \"Yellow\",\r\n      color: charactersPalette.cloud,\r\n      description: \"From Cloud\",\r\n    },\r\n    {\r\n      colorName: \"Green\",\r\n      color: charactersPalette.tifa,\r\n      description: \"From Tifa\",\r\n    },\r\n    {\r\n      colorName: \"Red\",\r\n      color: charactersPalette.barret,\r\n      description: \"From Barret\",\r\n    },\r\n    {\r\n      colorName: \"Blue\",\r\n      color: charactersPalette.aerith,\r\n      description: \"From Aerith\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" paragraph>\r\n        Menus\r\n      </Typography>\r\n      <Typography>\r\n        All materia menus display the final state of the menu. The changes are\r\n        highlighted in bold, and the colors represent where the materia came\r\n        from.\r\n      </Typography>\r\n      <List dense>\r\n        {materiaColors.map((materiaColor, materiaColorIndex) => (\r\n          <ListItem key={materiaColorIndex}>\r\n            <ListItemIcon>\r\n              <Typography\r\n                variant=\"body2\"\r\n                style={{ color: materiaColor.color, fontWeight: \"bold\" }}\r\n              >\r\n                {materiaColor.colorName}\r\n              </Typography>\r\n            </ListItemIcon>\r\n            <ListItemText primary={materiaColor.description} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Typography paragraph>\r\n        The same thing applies to equipment. If an armor is listed in yellow for\r\n        example, it means that that armor was equipped in Cloud.\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RecommendedSettings() {\r\n  const classes = useStyles();\r\n\r\n  const recommendedSettings = [\r\n    {\r\n      name: \"Camera Distance: Out of Battle\",\r\n      value: \"3\",\r\n    },\r\n    {\r\n      name: \"Camera Distance: In Battle\",\r\n      value: \"3\",\r\n    },\r\n    {\r\n      name: \"Responsiveness\",\r\n      value: \"5\",\r\n    },\r\n    {\r\n      name: \"Combo Targeting\",\r\n      value: \"Free\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\">Recommended Settings</Typography>\r\n      <List className={classes.settingsList}>\r\n        {recommendedSettings.map((setting, settingIndex) => (\r\n          <ListItem key={settingIndex} className={classes.settingsListItem}>\r\n            <ListItemText primary={setting.name} secondary={setting.value} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FirstStrike() {\r\n  const enemies = [\r\n    \"Guard Dog\",\r\n    \"Sweeper\",\r\n    \"Guard Scorpion\",\r\n    \"Shock Troopers\",\r\n    \"Huntsman\",\r\n    \"Roche\",\r\n    \"Enigmatic Spectre (backup)\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" paragraph>\r\n        First Strike\r\n      </Typography>\r\n      <Typography>\r\n        For this route to work it's mandatory to get First Strike in Chapter 4.\r\n        To do it you must fill an ATB bar using any \"triangle\" move (Punisher,\r\n        Overcharge, Whirl) when the enemy is staggered. Sometimes the passive\r\n        ATB gain will \"steal\" a bar from you, so pay attention. If you follow\r\n        the instructions for the fights you should be able to get it. Those are\r\n        the enemies where you can do it:\r\n      </Typography>\r\n      <List dense>\r\n        {enemies.map((enemy, enemyIndex) => (\r\n          <ListItem key={enemyIndex}>\r\n            <ListItemText primary={enemy} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Introduction() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <IndexTitle id=\"intro\" text=\"Introduction\" />\r\n      <Card color={theme.palette.text.primary}>\r\n        <Box padding={2} paddingBottom={0}>\r\n          <Menus />\r\n          <RecommendedSettings />\r\n          <FirstStrike />\r\n        </Box>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Introduction;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Introduction from \"./Introduction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport interface RouteProps {\r\n  title: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Route({ title, children }: RouteProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography\r\n        variant=\"h3\"\r\n        align=\"center\"\r\n        paragraph\r\n        className={classes.title}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Introduction />\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Route;\r\n","import React from \"react\";\r\n\r\nexport interface Settings {\r\n  showEncounters: boolean;\r\n  showBosses: boolean;\r\n  showPick: boolean;\r\n  showOptionalPick: boolean;\r\n  showMenus: boolean;\r\n  showShops: boolean;\r\n  showDialogue: boolean;\r\n  showBench: boolean;\r\n  showOptionalBench: boolean;\r\n}\r\n\r\nconst defaultSettings: Settings = {\r\n  showEncounters: true,\r\n  showBosses: true,\r\n  showPick: true,\r\n  showOptionalPick: true,\r\n  showMenus: true,\r\n  showShops: true,\r\n  showDialogue: true,\r\n  showBench: true,\r\n  showOptionalBench: true,\r\n};\r\n\r\nexport const SettingsContext = React.createContext(defaultSettings);\r\n\r\nfunction useSettings() {\r\n  const settingsStorageKey = \"SETTINGS\";\r\n  const [settings, setSettings] = React.useState<Settings>(defaultSettings);\r\n\r\n  React.useEffect(() => {\r\n    const settingsStorageValue = localStorage.getItem(settingsStorageKey);\r\n\r\n    if (settingsStorageValue) {\r\n      setSettings(JSON.parse(settingsStorageValue));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    settings,\r\n    setSettings: (settings: Settings) => {\r\n      localStorage.setItem(settingsStorageKey, JSON.stringify(settings));\r\n      setSettings(settings);\r\n    },\r\n  };\r\n}\r\n\r\nexport default useSettings;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface BossProps {\r\n  name: string;\r\n  phases: Array<Array<string>>;\r\n}\r\n\r\nfunction Boss({ name, phases }: BossProps) {\r\n  const classes = useStyles();\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showBosses) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card color={cardsPalette.boss}>\r\n      <List dense subheader={<ListSubheader>{name}</ListSubheader>}>\r\n        {phases.map((phase, phaseIndex) => (\r\n          <React.Fragment key={phaseIndex}>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={\"Phase \" + (phaseIndex + 1)}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <List dense disablePadding className={classes.nestedList}>\r\n              {phase.map((instruction, instructionIndex) => (\r\n                <ListItem key={instructionIndex}>\r\n                  <ListItemText\r\n                    primary={instruction}\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Boss;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircleIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport SquareIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport TriangleIcon from \"@material-ui/icons/ChangeHistory\";\r\nimport XIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  list: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  listSubheader: {\r\n    width: \"100%\",\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n  shortcutIcon: {\r\n    minWidth: \"30px\",\r\n  },\r\n}));\r\n\r\nexport interface BattleSettingsProps {\r\n  characters: Array<{\r\n    name: string;\r\n    shortcuts: Array<{\r\n      shortcut: \"circle\" | \"square\" | \"triangle\" | \"x\";\r\n      ability: string;\r\n    }>;\r\n  }>;\r\n}\r\n\r\nfunction BattleSettings({ characters }: BattleSettingsProps) {\r\n  const classes = useStyles();\r\n\r\n  const icons = {\r\n    circle: CircleIcon,\r\n    square: SquareIcon,\r\n    triangle: TriangleIcon,\r\n    x: XIcon,\r\n  };\r\n\r\n  return (\r\n    <List\r\n      dense\r\n      className={classes.list}\r\n      subheader={\r\n        <ListSubheader className={classes.listSubheader}>\r\n          Battle Settings\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {characters.map((character, characterIndex) => (\r\n        <Box key={characterIndex}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={character.name}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n          <List dense disablePadding className={classes.nestedList}>\r\n            {character.shortcuts.map((shortcut, shortcutIndex) => (\r\n              <ListItem key={shortcutIndex}>\r\n                <ListItemIcon className={classes.shortcutIcon}>\r\n                  {React.createElement(icons[shortcut.shortcut])}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={shortcut.ability}\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default BattleSettings;\r\n","import React from \"react\";\r\nimport IndexTitle from \"./IndexTitle\";\r\n\r\nexport interface ChapterProps {\r\n  number: number;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Chapter({ number, children }: ChapterProps) {\r\n  return (\r\n    <>\r\n      <IndexTitle id={\"chapter-\" + number} text={\"Chapter \" + number} />\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chapter;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface EncounterProps {\r\n  enemies: string;\r\n  instructions: Array<string>;\r\n}\r\n\r\nfunction Encounter({ enemies, instructions }: EncounterProps) {\r\n  const classes = useStyles();\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showEncounters) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card color={cardsPalette.encounter}>\r\n      <List dense subheader={<ListSubheader>{enemies}</ListSubheader>}>\r\n        {instructions.map((instruction, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemText\r\n              primary={instruction}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Encounter;\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nexport interface MenuProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Menu({ children }: MenuProps) {\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showMenus) {\r\n    return null;\r\n  }\r\n\r\n  const mappedChildren = React.Children.map(children, (child, childIndex) => {\r\n    if (childIndex === 0) {\r\n      return child;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Divider />\r\n        {child}\r\n      </>\r\n    );\r\n  });\r\n\r\n  return <Card color={cardsPalette.menu}>{mappedChildren}</Card>;\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nexport interface PickProps {\r\n  item: string;\r\n  description?: string;\r\n  optional?: boolean;\r\n}\r\n\r\nfunction Pick({ item, description, optional }: PickProps) {\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showPick && !optional) {\r\n    return null;\r\n  }\r\n\r\n  if (!settings.showOptionalPick && optional) {\r\n    return null;\r\n  }\r\n\r\n  let text = `Pick ${item}`;\r\n\r\n  if (optional) {\r\n    text += \" (optional)\";\r\n  }\r\n\r\n  return (\r\n    <Card color={optional ? cardsPalette.pickOptional : cardsPalette.pick}>\r\n      <List dense>\r\n        <ListItem>\r\n          <ListItemText primary={text} secondary={description} />\r\n        </ListItem>\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Pick;\r\n","import React from \"react\";\r\nimport Boss from \"../../components/Boss\";\r\nimport BattleSettings from \"../../components/BattleSettings\";\r\nimport Chapter from \"../../components/Chapter\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Menu from \"../../components/Menu\";\r\nimport Pick from \"../../components/Pick\";\r\n\r\nfunction Chapter1() {\r\n  return (\r\n    <Chapter number={1}>\r\n      <Encounter enemies=\"Security Officer x2\" instructions={[\"Cleave\"]} />\r\n      <Encounter enemies=\"Security Officer x2\" instructions={[\"Punisher\"]} />\r\n      <Menu>\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              shortcuts: [\r\n                {\r\n                  shortcut: \"circle\",\r\n                  ability: \"Fire\",\r\n                },\r\n                {\r\n                  shortcut: \"x\",\r\n                  ability: \"Cross Slash\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Security Officer, Guard Dog\"\r\n        instructions={[\r\n          \"Security Officer: Dash, Punisher\",\r\n          \"Guard Dog: Fire, Punisher\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Guard Dog\"\r\n        instructions={[\r\n          \"Security Officers: Punisher\",\r\n          \"Guard Dog: Fire, Punisher\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2\"\r\n        instructions={[\"Dash, Punisher\"]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x4\"\r\n        instructions={[\"Dash, Punisher rightmost one\"]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Sentry Ray x3, Monodrive x3\"\r\n        instructions={[\r\n          \"Overcharge Sentry Ray B, Combo A, Thunder x2\",\r\n          \"Punisher Monodrive B and C, Focused Thrust A\",\r\n        ]}\r\n      />\r\n      <Menu>\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Barret\",\r\n              shortcuts: [\r\n                {\r\n                  shortcut: \"square\",\r\n                  ability: \"Thunder\",\r\n                },\r\n                {\r\n                  shortcut: \"circle\",\r\n                  ability: \"Fire\",\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Sweeper\"\r\n        instructions={[\r\n          \"Cloud: Dash, Punisher\",\r\n          \"Barret: Overcharge, Combo, Charge, Thunder\",\r\n          \"Barret: Charge, Combo, Charge, Focused Shot, Focused Thrust\",\r\n          \"Cloud: Punisher (fill 2 ATB), Barret Thunder x2\",\r\n        ]}\r\n      />\r\n      <Pick item=\"Ether\" description=\"If near stairs after battle\" optional />\r\n      <Boss\r\n        name=\"Guard Scorpion\"\r\n        phases={[\r\n          [\r\n            \"Cloud: Dash\",\r\n            \"Barret: Lock, run back, Overcharge\",\r\n            \"Cloud: Counter, Punisher full, Berserk, Fire, Focused Shot\",\r\n            \"Cloud: Punisher full, Fire, Punisher x4, Berserk, Fire, Punisher\",\r\n          ],\r\n          [\r\n            \"Cloud: Dash and Roll x2, go behind\",\r\n            \"Cloud: Punisher x4, Berserk, Fire, Punisher x4, Focused Thrust\",\r\n            \"Barret: Combo, Focused Shot, Combo\",\r\n            \"Cloud: Counter, Punisher x4, Berserk, Focused Thrust, Thunder\",\r\n            \"Cloud: Punisher x2, Berserk, Overcharge, Punisher full, Thunder, Berserk\",\r\n          ],\r\n          [\r\n            \"Cloud: Fire\",\r\n            \"Barret: Combo, Thunder, Combo, Charge, Combo, Charge, Focused Shot\",\r\n            \"Cloud: Dash, Punisher x3, Berserk, Cross Slash\",\r\n            \"Barret: Overcharge, Combo, Swap to Cloud\",\r\n          ],\r\n          [\"Cloud: Punisher x2, Berserk, Fire on Left Leg\", \"Fire, Thunder\"],\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Monodrive x2\"\r\n        instructions={[\r\n          \"Punisher B, Roll and Operator until ATB, Focused Thrust A\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Monodrive x2\"\r\n        instructions={[\r\n          \"Cloud: Operator x1 left Monodrive, Punisher full Monodrive + Security Officer\",\r\n          \"Cloud: Focused Thrust Security Officer\",\r\n          \"Barret: Overcharge Monodrive, Swap to Cloud\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Shock Trooper x3, Sentry Ray x2\"\r\n        instructions={[\r\n          \"Barret: Overcharge Sentry Ray A, Thunder B\",\r\n          \"Cloud: Counter and Fire/Braver/Punisher Shock Troopers\",\r\n        ]}\r\n      />\r\n    </Chapter>\r\n  );\r\n}\r\n\r\nexport default Chapter1;\r\n","import React from \"react\";\r\nimport Chapter from \"../../components/Chapter\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Pick from \"../../components/Pick\";\r\n\r\nfunction Chapter2() {\r\n  return (\r\n    <Chapter number={2}>\r\n      <Pick item=\"Ether\" description=\"When you go outside\" />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Guard Dog\"\r\n        instructions={[\r\n          \"Dash, Berserk, Punisher Security Officers\",\r\n          \"Fire, Punisher Guard Dog\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Grenadier x2\"\r\n        instructions={[\r\n          \"Cleave Grenadiers\",\r\n          \"Fire Security Officer\",\r\n          \"Focused Thrust Security Officer\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Shock Troopers x2\"\r\n        instructions={[\"Counter until Staggered\", \"Berserk, Fire\"]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Grenadier x2\"\r\n        instructions={[\r\n          \"Punisher Security Officer\",\r\n          \"Focused Thrust Security Officer\",\r\n          \"Cleave Grenadiers\",\r\n        ]}\r\n      />\r\n      <Pick item=\"Grenade x2\" />\r\n      <Pick item=\"Iron Bangle\" />\r\n      <Encounter\r\n        enemies=\"Security Officer x6, Grenadier x2, Riot Trooper x2, The Huntsman\"\r\n        instructions={[\r\n          \"Grenade Riot Troopers, Berserk before Huntsman\",\r\n          \"Huntsman: Fire to pressure, Punisher, Berserk, Fire\",\r\n        ]}\r\n      />\r\n    </Chapter>\r\n  );\r\n}\r\n\r\nexport default Chapter2;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nexport interface DialogueProps {\r\n  optionText: string;\r\n  optionPosition: \"1st\" | \"2nd\" | \"3rd\";\r\n  when: string;\r\n}\r\n\r\nfunction Dialogue({ optionText, optionPosition, when }: DialogueProps) {\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showDialogue) {\r\n    return null;\r\n  }\r\n\r\n  let text = `Choose \"${optionText}\" (${optionPosition}) ${when}`;\r\n\r\n  return (\r\n    <Card color={cardsPalette.dialogue}>\r\n      <List dense>\r\n        <ListItem>\r\n          <ListItemText primary={text} />\r\n        </ListItem>\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Dialogue;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  list: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  listSubheader: {\r\n    width: \"100%\",\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface EquipmentProps {\r\n  characters: Array<{\r\n    name: string;\r\n    equipments: Array<{ name: string }>;\r\n  }>;\r\n}\r\n\r\nfunction Equipment({ characters }: EquipmentProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      dense\r\n      className={classes.list}\r\n      subheader={\r\n        <ListSubheader className={classes.listSubheader}>\r\n          Equipment\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {characters.map((character, characterIndex) => (\r\n        <Box key={characterIndex}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={character.name}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n          <List dense disablePadding className={classes.nestedList}>\r\n            {character.equipments.map((equipment, equipmentIndex) => (\r\n              <ListItem key={equipmentIndex}>\r\n                <ListItemText\r\n                  primary={equipment.name}\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Equipment;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { charactersPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  list: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  listSubheader: {\r\n    width: \"100%\",\r\n  },\r\n  listItemIcon: {\r\n    minWidth: 64,\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface MateriaItem {\r\n  name: string;\r\n  status: \"unchanged\" | \"new\" | \"cloud\" | \"tifa\" | \"barret\" | \"aerith\";\r\n}\r\n\r\nexport interface MateriaProps {\r\n  characters: Array<{\r\n    name: string;\r\n    weapon: Array<MateriaItem>;\r\n    armor: Array<MateriaItem>;\r\n    summon: Array<MateriaItem>;\r\n  }>;\r\n}\r\n\r\nfunction Materia({ characters }: MateriaProps) {\r\n  const classes = useStyles();\r\n\r\n  const renderMateria = (materia: Array<MateriaItem>) => {\r\n    return materia.map((x, i) => (\r\n      <Typography\r\n        key={i}\r\n        component=\"span\"\r\n        variant=\"body2\"\r\n        className={classes.listItemText}\r\n        style={{\r\n          fontWeight: x.status !== \"unchanged\" ? \"bold\" : undefined,\r\n          textTransform: x.status !== \"unchanged\" ? \"uppercase\" : undefined,\r\n          color:\r\n            x.status !== \"unchanged\" && x.status !== \"new\"\r\n              ? charactersPalette[x.status]\r\n              : undefined,\r\n        }}\r\n      >{`(${x.name || \"Empty\"}) `}</Typography>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <List\r\n      dense\r\n      className={classes.list}\r\n      subheader={\r\n        <ListSubheader className={classes.listSubheader}>Materia</ListSubheader>\r\n      }\r\n    >\r\n      {characters.map((character, characterIndex) => (\r\n        <Box key={characterIndex}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={character.name}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n          <List dense disablePadding className={classes.nestedList}>\r\n            <ListItem>\r\n              <ListItemIcon className={classes.listItemIcon}>\r\n                Weapon\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={renderMateria(character.weapon)}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon className={classes.listItemIcon}>\r\n                Armor\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={renderMateria(character.armor)}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemIcon className={classes.listItemIcon}>\r\n                Summon\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={renderMateria(character.summon)}\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Materia;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  list: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  listSubheader: {\r\n    width: \"100%\",\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface ShopProps {\r\n  name: string;\r\n  sell?: Array<string>;\r\n  buy?: Array<string>;\r\n}\r\n\r\nfunction Shop({ name, sell, buy }: ShopProps) {\r\n  const classes = useStyles();\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showShops) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card color={cardsPalette.shop}>\r\n      <List\r\n        dense\r\n        className={classes.list}\r\n        subheader={\r\n          <ListSubheader className={classes.listSubheader}>\r\n            {name}\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        {sell && sell.length > 0 && (\r\n          <Box>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Sell\"\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <List dense disablePadding className={classes.nestedList}>\r\n              {sell.map((item, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={item}\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        )}\r\n        {buy && buy.length > 0 && (\r\n          <Box>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary=\"Buy\"\r\n                classes={{ primary: classes.listItemText }}\r\n              />\r\n            </ListItem>\r\n            <List dense disablePadding className={classes.nestedList}>\r\n              {buy.map((item, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={item}\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        )}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\nimport BattleSettings from \"../../components/BattleSettings\";\r\nimport Chapter from \"../../components/Chapter\";\r\nimport Dialogue from \"../../components/Dialogue\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Equipment from \"../../components/Equipment\";\r\nimport Materia from \"../../components/Materia\";\r\nimport Menu from \"../../components/Menu\";\r\nimport Pick from \"../../components/Pick\";\r\nimport Shop from \"../../components/Shop\";\r\n\r\nfunction Chapter3() {\r\n  return (\r\n    <Chapter number={3}>\r\n      <Shop name=\"Item Shop\" buy={[\"Deadly Dodge\"]} />\r\n      <Menu>\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n                { name: \"Deadly Dodge\", status: \"new\" },\r\n              ],\r\n              armor: [],\r\n              summon: [],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Pick item=\"Ether\" description=\"After Biggs/Wedge\" optional />\r\n      <Pick item=\"Ice\" description=\"In Scrap Boulevard\" />\r\n      <Encounter\r\n        enemies=\"Gorgers and Wererats\"\r\n        instructions={[\r\n          \"Deadly Dodge + Cleave, then Punisher, Fire, Focused Thrust...\",\r\n        ]}\r\n      />\r\n      <Shop name=\"Weapon Shop\" buy={[\"Earrings\"]} />\r\n      <Menu>\r\n        <Equipment\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              equipments: [\r\n                { name: \"Iron Blade\" },\r\n                { name: \"Iron Bangle\" },\r\n                { name: \"Earrings\" },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n                { name: \"Ice\", status: \"new\" },\r\n                { name: \"Assess\", status: \"new\" },\r\n              ],\r\n              armor: [{ name: \"Deadly Dodge\", status: \"cloud\" }],\r\n              summon: [],\r\n            },\r\n          ]}\r\n        />\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              shortcuts: [\r\n                { shortcut: \"square\", ability: \"Assess\" },\r\n                { shortcut: \"x\", ability: \"TRIPOLOSKI\" },\r\n              ],\r\n            },\r\n            {\r\n              name: \"Tifa\",\r\n              shortcuts: [\r\n                { shortcut: \"x\", ability: \"Blizzard\" },\r\n                { shortcut: \"circle\", ability: \"Fire\" },\r\n                { shortcut: \"square\", ability: \"Thunder\" },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Wererats x2, Gorger\"\r\n        instructions={[\r\n          \"Build ATB and Assess Gorger + Wererat\",\r\n          \"Deadly Dodge\",\r\n          \"Flee if Call to Arms\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Security Officer x2, Elite Security Officer, Guard Dog\"\r\n        instructions={[\"Cloud: Deadly Dodge, Fire Dog, Berserk, TRIPOLOSKI\"]}\r\n      />\r\n      <Dialogue\r\n        optionText=\"No\"\r\n        optionPosition=\"2nd\"\r\n        when=\"before entering 7th Heaven\"\r\n      />\r\n      <Encounter\r\n        enemies=\"Hoodlum x4\"\r\n        instructions={[\r\n          \"Deadly Dodge, Fire\",\r\n          \"TRIPOLOSKI if low HP, Fire otherwise\",\r\n        ]}\r\n      />\r\n      <Dialogue\r\n        optionText=\"Yeah\"\r\n        optionPosition=\"2nd\"\r\n        when=\"when talking to Jessie\"\r\n      />\r\n    </Chapter>\r\n  );\r\n}\r\n\r\nexport default Chapter3;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nestedList: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  list: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  listSubheader: {\r\n    width: \"100%\",\r\n  },\r\n  listItemText: {\r\n    lineHeight: 1,\r\n  },\r\n}));\r\n\r\nexport interface UpgradeWeaponsProps {\r\n  characters: Array<{\r\n    name: string;\r\n    weapons: Array<{\r\n      name: string;\r\n      upgrade: string;\r\n    }>;\r\n  }>;\r\n}\r\n\r\nfunction UpgradeWeapons({ characters }: UpgradeWeaponsProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      dense\r\n      className={classes.list}\r\n      subheader={\r\n        <ListSubheader className={classes.listSubheader}>\r\n          Upgrade Weapons\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {characters.map((character, characterIndex) => (\r\n        <Box key={characterIndex}>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={character.name}\r\n              classes={{ primary: classes.listItemText }}\r\n            />\r\n          </ListItem>\r\n          <List dense disablePadding className={classes.nestedList}>\r\n            {character.weapons.map((weapon, weaponIndex) => (\r\n              <ListItem key={weaponIndex}>\r\n                <ListItemText\r\n                  primary={weapon.name}\r\n                  secondary={weapon.upgrade}\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default UpgradeWeapons;\r\n","import React from \"react\";\r\nimport BattleSettings from \"../../components/BattleSettings\";\r\nimport Boss from \"../../components/Boss\";\r\nimport Chapter from \"../../components/Chapter\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Materia from \"../../components/Materia\";\r\nimport Menu from \"../../components/Menu\";\r\nimport Pick from \"../../components/Pick\";\r\nimport Shop from \"../../components/Shop\";\r\nimport UpgradeWeapons from \"../../components/UpgradeWeapons\";\r\n\r\nfunction Chapter4() {\r\n  return (\r\n    <Chapter number={4}>\r\n      <Shop\r\n        name=\"Vending Machine\"\r\n        buy={[\"Hi-Potion x3\", \"Ether\", \"Fire\", \"Ice\", \"Lightning\"]}\r\n      />\r\n      <Menu>\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n                { name: \"Ice\", status: \"unchanged\" },\r\n                { name: \"Lightning\", status: \"new\" },\r\n              ],\r\n              armor: [{ name: \"Deadly Dodge\", status: \"unchanged\" }],\r\n              summon: [{ name: \"Ifrit\", status: \"new\" }],\r\n            },\r\n            {\r\n              name: \"Tifa\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"new\" },\r\n                { name: \"Ice\", status: \"new\" },\r\n              ],\r\n              armor: [],\r\n              summon: [{ name: \"Empty\", status: \"unchanged\" }],\r\n            },\r\n          ]}\r\n        />\r\n        <UpgradeWeapons\r\n          characters={[\r\n            {\r\n              name: \"Tifa\",\r\n              weapons: [\r\n                { name: \"Leather Gloves\", upgrade: \"Auto - Attack, Manual\" },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              shortcuts: [{ shortcut: \"square\", ability: \"Thunder\" }],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Security Officers x17, Grenadier x2\"\r\n        instructions={[\"Deadly Dodge, Cleave, TRIPOLOSKI\", \"Save 2 ATB\"]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Elite Security Officer, Riot Trooper\"\r\n        instructions={[\r\n          \"Fire Riot Trooper\",\r\n          \"Fire, Punisher Elite Security Officer\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Shock Trooper,  Elite Grenadier\"\r\n        instructions={[\r\n          \"Berserk Elite Grenadier, Fire Shock Trooper\",\r\n          \"Punisher, Fire\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Guard Dog x8\"\r\n        instructions={[\r\n          \"Dash, Cleave Wedge dogs\",\r\n          \"Lure them, Counter x2, Blizzard, TRIPOLOSKI\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Sweeper x2\"\r\n        instructions={[\r\n          \"Punisher full, Berserk B, Thunder A\",\r\n          \"Cross Slash A (hit both)\",\r\n          \"Punisher, Berserk, Thunder...\",\r\n          \"Save 1 ATB\",\r\n        ]}\r\n      />\r\n      <Boss\r\n        name=\"Roche\"\r\n        phases={[\r\n          [\"Berserk, Operator, Fire\", \"Counter, 2 ATB, Fire, Fire\"],\r\n          [\r\n            \"Dash, Counter, Punisher full, Focused Thrust when pressured\",\r\n            \"Staggered: Punisher, Berserk, Fire\",\r\n            \"Roll when flames\",\r\n          ],\r\n        ]}\r\n      />\r\n      <Pick item=\"Revival\" />\r\n      <Encounter\r\n        enemies=\"Mysterious Spectre\"\r\n        instructions={[\r\n          \"Kill B and C first\",\r\n          \"Deadly Dodge, Cleave, Fire, Punisher\",\r\n          \"Cross Slash, Whirl, Divekick\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Mysterious Spectre, Enigmatic Spectre\"\r\n        instructions={[\r\n          \"Deadly Dodge, Cleave\",\r\n          \"Mysterious x2: Fire, Punisher (stagger)\",\r\n          \"Enigmatic: Fire/Focused Thrust, Punisher/Berserk until stagger\",\r\n          \"Stagger: Cross Slash, Divekick, Whirl\",\r\n        ]}\r\n      />\r\n      <Shop name=\"Chadley\" buy={[\"Wind\", \"First Strike\"]} />\r\n      <Menu>\r\n        <UpgradeWeapons\r\n          characters={[\r\n            {\r\n              name: \"Barret\",\r\n              weapons: [{ name: \"Gatling Gun\", upgrade: \"Auto - Attack\" }],\r\n            },\r\n          ]}\r\n        />\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n                { name: \"Ice\", status: \"unchanged\" },\r\n                { name: \"Lightning\", status: \"unchanged\" },\r\n              ],\r\n              armor: [{ name: \"First Strike\", status: \"new\" }],\r\n              summon: [{ name: \"Ifrit\", status: \"unchanged\" }],\r\n            },\r\n            {\r\n              name: \"Barret\",\r\n              weapon: [\r\n                { name: \"Lightning\", status: \"unchanged\" },\r\n                { name: \"Barrier\", status: \"new\" },\r\n              ],\r\n              armor: [{ name: \"Revival\", status: \"new\" }],\r\n              summon: [{ name: \"Empty\", status: \"unchanged\" }],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n    </Chapter>\r\n  );\r\n}\r\n\r\nexport default Chapter4;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { SettingsContext } from \"../useSettings\";\r\nimport Card from \"./Card\";\r\nimport { cardsPalette } from \"./palette\";\r\n\r\nexport interface BenchProps {\r\n  description?: string;\r\n  optional?: boolean;\r\n}\r\n\r\nfunction Bench({ description, optional }: BenchProps) {\r\n  const settings = React.useContext(SettingsContext);\r\n\r\n  if (!settings.showBench && !optional) {\r\n    return null;\r\n  }\r\n\r\n  if (!settings.showOptionalBench && optional) {\r\n    return null;\r\n  }\r\n\r\n  let text = \"Use bench\";\r\n\r\n  if (optional) {\r\n    text += \" (optional)\";\r\n  }\r\n\r\n  return (\r\n    <Card color={optional ? cardsPalette.benchOptional : cardsPalette.bench}>\r\n      <List dense>\r\n        <ListItem>\r\n          <ListItemText primary={text} secondary={description} />\r\n        </ListItem>\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Bench;\r\n","import React from \"react\";\r\nimport BattleSettings from \"../../components/BattleSettings\";\r\nimport Bench from \"../../components/Bench\";\r\nimport Boss from \"../../components/Boss\";\r\nimport Chapter from \"../../components/Chapter\";\r\nimport Encounter from \"../../components/Encounter\";\r\nimport Equipment from \"../../components/Equipment\";\r\nimport Materia from \"../../components/Materia\";\r\nimport Menu from \"../../components/Menu\";\r\nimport Pick from \"../../components/Pick\";\r\nimport Shop from \"../../components/Shop\";\r\nimport UpgradeWeapons from \"../../components/UpgradeWeapons\";\r\n\r\nfunction Chapter5() {\r\n  return (\r\n    <Chapter number={5}>\r\n      <Encounter\r\n        enemies=\"Slug Ray x5\"\r\n        instructions={[\"Punisher, Berserk, TRIPOLOSKI\"]}\r\n      />\r\n      <Pick\r\n        item=\"Elixir\"\r\n        description=\"Door to the right after Barret joins\"\r\n        optional\r\n      />\r\n      <Encounter enemies=\"Wererat x3\" instructions={[\"TRIPOLOSKI\"]} />\r\n      <Menu>\r\n        <UpgradeWeapons\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapons: [{ name: \"Iron Blade\", upgrade: \"Auto - Attack\" }],\r\n            },\r\n            {\r\n              name: \"Tifa\",\r\n              weapons: [{ name: \"Leather Gloves\", upgrade: \"Auto - Attack\" }],\r\n            },\r\n          ]}\r\n        />\r\n        <BattleSettings\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              shortcuts: [{ shortcut: \"circle\", ability: \"Blizzard\" }],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Grashtrike, Wererat x2\"\r\n        instructions={[\r\n          \"Grashtrike: Overcharge, Focused Shot, Whirl, Divekick\",\r\n          \"TRIPOLOSKI the rats\",\r\n        ]}\r\n      />\r\n      <Pick item=\"Hi-Potion x2\" optional />\r\n      <Encounter\r\n        enemies=\"Grashtrike x2\"\r\n        instructions={[\r\n          \"Overcharge, Focused Shot, Whirl, Divekick\",\r\n          \"Berserk, Blizzard\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Grashtrike x2, Queen Grashtrike\"\r\n        instructions={[\r\n          \"Grashtrike: Berserk, Blizzard, Punisher\",\r\n          \"If Blizzard hit only one: Overcharge, Focused Shot, Whirl, Divekick\",\r\n          \"Queen: Overcharge, Cloud and Tifa Blizzard\",\r\n          \"Focused Shot (2 ATB if possible) when pressured\",\r\n        ]}\r\n      />\r\n      <Pick item=\"Phoenix Down x3\" />\r\n      <Encounter\r\n        enemies=\"Flametrooper, Security Officer x4\"\r\n        instructions={[\r\n          \"Berserk + Fire Flametrooper\",\r\n          \"Punisher and TRIPOLOSKI\",\r\n        ]}\r\n      />\r\n      <Encounter\r\n        enemies=\"Flametrooper x2, Sentry Launcher x2\"\r\n        instructions={[\r\n          \"Berserk Sentry B\",\r\n          \"Fire Flametroopers\",\r\n          \"Thunder Sentries\",\r\n        ]}\r\n      />\r\n      <Pick item=\"Lightning\" />\r\n      <Bench />\r\n      <Shop\r\n        name=\"Vending Machine\"\r\n        sell={[\"Healing x2\"]}\r\n        buy={[\r\n          \"Hi-Potion x3\",\r\n          \"Ether\",\r\n          \"Phoenix Down\",\r\n          \"Power Wristguards\",\r\n          \"Earrings\",\r\n          \"Fire\",\r\n        ]}\r\n      />\r\n      <Menu>\r\n        <Equipment\r\n          characters={[\r\n            {\r\n              name: \"Barret\",\r\n              equipments: [{ name: \"Earrings\" }],\r\n            },\r\n            {\r\n              name: \"Tifa\",\r\n              equipments: [{ name: \"Power Wristguards\" }],\r\n            },\r\n          ]}\r\n        />\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Revival\", status: \"barret\" },\r\n                { name: \"Barrier\", status: \"barret\" },\r\n                { name: \"Lightning\", status: \"unchanged\" },\r\n              ],\r\n              armor: [{ name: \"First Strike\", status: \"unchanged\" }],\r\n              summon: [{ name: \"Ifrit\", status: \"unchanged\" }],\r\n            },\r\n            {\r\n              name: \"Barret\",\r\n              weapon: [\r\n                { name: \"Lightning\", status: \"unchanged\" },\r\n                { name: \"Ice\", status: \"cloud\" },\r\n                { name: \"Fire\", status: \"new\" },\r\n              ],\r\n              armor: [{ name: \"Fire\", status: \"cloud\" }],\r\n              summon: [{ name: \"\", status: \"unchanged\" }],\r\n            },\r\n            {\r\n              name: \"Tifa\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n                { name: \"Ice\", status: \"unchanged\" },\r\n                { name: \"Lightning\", status: \"new\" },\r\n              ],\r\n              armor: [],\r\n              summon: [{ name: \"\", status: \"unchanged\" }],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n      <Encounter\r\n        enemies=\"Elite Security Officer x2\"\r\n        instructions={[\"Berserk + TRIPOLOSKI\"]}\r\n      />\r\n      <Boss\r\n        name=\"Crab Warden\"\r\n        phases={[\r\n          [\r\n            \"Front Left: Overcharge, Berserk, Thunder, Punisher full, Berserk\",\r\n            \"Front Right: Thunder Rear Right, Punisher full, Berserk\",\r\n            \"Front Right: Thunder Rear Left, Punisher full, Berserk\",\r\n            \"Stagger: Punisher + Berserk\",\r\n          ],\r\n          [\r\n            \"Rear Left: Cloud Thunder, Barret Thunder, Overcharge\",\r\n            \"Rear Right: Cloud Thunder, Whirl/Tifa Combo\",\r\n            \"Arm Right: Divekick, Whirl, Punisher + Berserk\",\r\n            \"Stagger: Cloud Thunder Arm Left, Berserk, Punisher\",\r\n          ],\r\n          [\r\n            \"Arm: Tifa/Barret Thunder each\",\r\n            \"Stagger: everyone Thunder Generator\",\r\n          ],\r\n        ]}\r\n      />\r\n      <Menu>\r\n        <Materia\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapon: [\r\n                { name: \"Fire\", status: \"barret\" },\r\n                { name: \"Ice\", status: \"barret\" },\r\n                { name: \"Lightning\", status: \"unchanged\" },\r\n              ],\r\n              armor: [{ name: \"First Strike\", status: \"unchanged\" }],\r\n              summon: [{ name: \"Ifrit\", status: \"unchanged\" }],\r\n            },\r\n            {\r\n              name: \"Barret\",\r\n              weapon: [\r\n                { name: \"Lightning\", status: \"unchanged\" },\r\n                { name: \"Barrier\", status: \"cloud\" },\r\n                { name: \"Fire\", status: \"unchanged\" },\r\n              ],\r\n              armor: [{ name: \"Revival\", status: \"cloud\" }],\r\n              summon: [{ name: \"\", status: \"unchanged\" }],\r\n            },\r\n          ]}\r\n        />\r\n        <UpgradeWeapons\r\n          characters={[\r\n            {\r\n              name: \"Cloud\",\r\n              weapons: [{ name: \"Iron Blade\", upgrade: \"Manual\" }],\r\n            },\r\n          ]}\r\n        />\r\n      </Menu>\r\n    </Chapter>\r\n  );\r\n}\r\n\r\nexport default Chapter5;\r\n","import React from \"react\";\r\nimport Route from \"../../components/Route\";\r\nimport Chapter1 from \"./Chapter1\";\r\nimport Chapter2 from \"./Chapter2\";\r\nimport Chapter3 from \"./Chapter3\";\r\nimport Chapter4 from \"./Chapter4\";\r\nimport Chapter5 from \"./Chapter5\";\r\n\r\nfunction AnyPercentNoMajorGlitchesNormal() {\r\n  return (\r\n    <Route title=\"Any% No Major Glitches - Normal\">\r\n      <Chapter1 />\r\n      <Chapter2 />\r\n      <Chapter3 />\r\n      <Chapter4 />\r\n      <Chapter5 />\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default AnyPercentNoMajorGlitchesNormal;\r\n","import React from \"react\";\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport type Theme = \"light\" | \"dark\";\r\n\r\nfunction useTheme() {\r\n  const themeStorageKey = \"THEME\";\r\n  const [theme, setTheme] = React.useState<Theme>(\"dark\");\r\n\r\n  React.useEffect(() => {\r\n    const themeStorageValue = localStorage.getItem(themeStorageKey);\r\n\r\n    if (\r\n      themeStorageValue &&\r\n      (themeStorageValue === \"light\" || themeStorageValue === \"dark\")\r\n    ) {\r\n      setTheme(themeStorageValue);\r\n    }\r\n  }, []);\r\n\r\n  const muiTheme = React.useMemo(() => {\r\n    return createMuiTheme({\r\n      palette: {\r\n        type: theme,\r\n      },\r\n    });\r\n  }, [theme]);\r\n\r\n  return {\r\n    theme,\r\n    setTheme: (theme: Theme) => {\r\n      localStorage.setItem(themeStorageKey, theme);\r\n      setTheme(theme);\r\n    },\r\n    muiTheme,\r\n  };\r\n}\r\n\r\nexport default useTheme;\r\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Drawer from \"./components/Drawer\";\nimport Header from \"./components/Header\";\nimport AnyPercentNoMajorGlitchesNormal from \"./routes/any-nmg-normal\";\nimport useIndex, { IndexContext } from \"./useIndex\";\nimport useSettings, { SettingsContext } from \"./useSettings\";\nimport useTheme from \"./useTheme\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const indexContext = useIndex();\n  const { settings, setSettings } = useSettings();\n  const { theme, setTheme, muiTheme } = useTheme();\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <SettingsContext.Provider value={settings}>\n        <IndexContext.Provider value={indexContext}>\n          <CssBaseline />\n          <Drawer\n            open={menuOpen}\n            onClose={() => setMenuOpen(false)}\n            settings={settings}\n            setSettings={setSettings}\n          />\n          <Header\n            theme={theme}\n            setTheme={setTheme}\n            onMenuClick={() => setMenuOpen(true)}\n          />\n          <Box className={classes.box}>\n            <AnyPercentNoMajorGlitchesNormal />\n          </Box>\n        </IndexContext.Provider>\n      </SettingsContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}